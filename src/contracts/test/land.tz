{ parameter
    (or (or (or (nat %buyLand) (pair %changeLandDescription nat string))
            (or (pair %changeLandName (string %new_land_name) (nat %token_id))
                (or %fa2
                   (or (pair %balance_of
                          (list %requests (pair (address %owner) (nat %token_id)))
                          (contract %callback
                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                       (contract %token_metadata_registry address))
                   (or (list %transfer
                          (pair (address %from_)
                                (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                       (list %update_operators
                          (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                              (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))))
        (or (or (pair %metadata
                   (list %token_ids nat)
                   (lambda %handler
                      (list (pair (nat %token_id)
                                  (pair (string %symbol)
                                        (pair (string %name) (pair (nat %decimals) (map %extras string string))))))
                      unit))
                (pair %mint (pair (option %operator address) (address %owner)) (nat %token_id)))
            (or (pair %sellLand (nat %id) (mutez %price)) (nat %withdrawFromSale)))) ;
  storage
    (pair (pair (big_map %ledger nat address)
                (pair %market
                   (pair (pair (address %admin) (nat %height))
                         (pair (big_map %lands
                                  nat
                                  (pair (pair (pair (option %description string) (nat %id))
                                              (pair (bool %isOwned) (string %name)))
                                        (pair (pair (bool %onSale) (pair %position nat nat)) (mutez %price))))
                               (big_map %on_sale nat mutez)))
                   (pair (big_map %owners address (set nat)) (nat %width))))
          (pair (pair %metadata
                   (pair (nat %last_used_id)
                         (big_map %metadata
                            (pair (nat %from_) (nat %to_))
                            (pair (pair (pair (nat %decimals) (map %extras string string))
                                        (pair (string %name) (string %symbol)))
                                  (nat %token_id))))
                   (set %token_defs (pair (nat %from_) (nat %to_))))
                (big_map %operators (pair address (pair address nat)) unit))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair address (pair address nat))
           (pair (pair address address) nat)
           { DUP ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             PAIR } ;
         LAMBDA
           (pair (or (pair (pair address address) nat) (pair (pair address address) nat))
                 (big_map (pair address (pair address nat)) unit))
           (big_map (pair address (pair address nat)) unit)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             IF_LEFT
               { SWAP ;
                 UNIT ;
                 SOME ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 UPDATE }
               { DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 NONE unit ;
                 SWAP ;
                 UPDATE } } ;
         LAMBDA
           (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
           unit
           { DUP ;
             CAR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             COMPARE ;
             EQ ;
             IF { DROP 3 ; UNIT }
                { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  CDR ;
                  DIG 3 ;
                  CDR ;
                  CAR ;
                  DIG 2 ;
                  PAIR ;
                  DIG 2 ;
                  PAIR ;
                  MEM ;
                  IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         LAMBDA
           (pair string (pair (pair nat address) (big_map nat address)))
           bool
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE
               { DROP ; FAILWITH }
               { DIG 2 ; DROP ; SWAP ; CAR ; CDR ; SWAP ; COMPARE ; EQ } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair nat address) (big_map address (set nat)))
           (big_map address (set nat))
           { DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             GET ;
             IF_NONE { EMPTY_SET nat } {} ;
             DIG 3 ;
             CAR ;
             CAR ;
             PUSH bool True ;
             SWAP ;
             UPDATE ;
             SOME ;
             DIG 2 ;
             UPDATE } ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         DIG 6 ;
         PAIR ;
         LAMBDA
           (pair (pair string string)
                 (pair (pair (pair (list (pair address (list (pair (pair nat address) nat))))
                                   (lambda
                                      (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                                      unit))
                             (pair (big_map (pair address (pair address nat)) unit) (big_map nat address)))
                       (option address)))
           (big_map nat address)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             DUP ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             ITER { DUP ;
                    DUG 2 ;
                    CDR ;
                    ITER { PUSH nat 0 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CAR ;
                           COMPARE ;
                           EQ ;
                           IF { DROP }
                              { PUSH nat 1 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CAR ;
                                COMPARE ;
                                NEQ ;
                                IF { DROP 2 ; DIG 2 ; DUP ; DUG 3 ; FAILWITH }
                                   { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CDR ;
                                     GET ;
                                     IF_NONE
                                       { DROP 2 ; DIG 3 ; DUP ; DUG 4 ; FAILWITH }
                                       { DIG 3 ;
                                         DUP ;
                                         DUG 4 ;
                                         CAR ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         COMPARE ;
                                         NEQ ;
                                         IF { DROP 3 ; DIG 2 ; DUP ; DUG 3 ; FAILWITH }
                                            { DIG 4 ;
                                              DUP ;
                                              DUG 5 ;
                                              CDR ;
                                              IF_NONE { SENDER } {} ;
                                              DIG 5 ;
                                              DUP ;
                                              DUG 6 ;
                                              CAR ;
                                              CDR ;
                                              CAR ;
                                              DIG 3 ;
                                              DUP ;
                                              DUG 4 ;
                                              CDR ;
                                              PAIR ;
                                              SWAP ;
                                              DIG 2 ;
                                              PAIR ;
                                              PAIR ;
                                              DIG 4 ;
                                              DUP ;
                                              DUG 5 ;
                                              CAR ;
                                              CAR ;
                                              CDR ;
                                              SWAP ;
                                              EXEC ;
                                              DROP ;
                                              DUP ;
                                              DUG 2 ;
                                              CAR ;
                                              CDR ;
                                              SOME ;
                                              DIG 2 ;
                                              CDR ;
                                              UPDATE } } } } } ;
                    SWAP ;
                    DROP } ;
             SWAP ;
             DROP ;
             SWAP ;
             DROP ;
             SWAP ;
             DROP } ;
         SWAP ;
         APPLY ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         LAMBDA
           (pair (lambda
                    (pair (or (pair (pair address address) nat) (pair (pair address address) nat))
                          (big_map (pair address (pair address nat)) unit))
                    (big_map (pair address (pair address nat)) unit))
                 (pair (pair (list (or (pair (pair address address) nat) (pair (pair address address) nat)))
                             address)
                       (big_map (pair address (pair address nat)) unit)))
           (big_map (pair address (pair address nat)) unit)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CDR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    CDR ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    IF_LEFT {} {} ;
                    CAR ;
                    CDR ;
                    COMPARE ;
                    EQ ;
                    IF { UNIT } { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                    DROP ;
                    SWAP ;
                    CAR ;
                    SWAP ;
                    PAIR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    SWAP ;
                    EXEC } ;
             SWAP ;
             DROP ;
             SWAP ;
             DROP } ;
         SWAP ;
         APPLY ;
         DIG 8 ;
         DUP ;
         DUG 9 ;
         CDR ;
         DIG 9 ;
         CAR ;
         IF_LEFT
           { DIG 7 ;
             DROP ;
             IF_LEFT
               { DIG 7 ;
                 DROP ;
                 DIG 7 ;
                 DROP ;
                 IF_LEFT
                   { DIG 5 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "This land is not on sale" ; FAILWITH } {} ;
                     AMOUNT ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { DROP 7 ;
                          PUSH string "The amount sent is not equal to the price of the land" ;
                          FAILWITH }
                        { DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          GET ;
                          IF_NONE
                            { PUSH string "This land is not owned by anyone" ; FAILWITH }
                            { DUP ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF { DROP ;
                                   PUSH string "The buyer is already the owner of this land" ;
                                   FAILWITH }
                                 {} } ;
                          NIL (pair address (list (pair (pair nat address) nat))) ;
                          NIL (pair (pair nat address) nat) ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          SENDER ;
                          PUSH nat 1 ;
                          PAIR ;
                          PAIR ;
                          CONS ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          PAIR ;
                          CONS ;
                          SELF ;
                          ADDRESS ;
                          SOME ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          CAR ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          DIG 10 ;
                          DIG 3 ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DIG 6 ;
                          SWAP ;
                          EXEC ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { EMPTY_SET nat } {} ;
                          PUSH nat 0 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          SIZE ;
                          COMPARE ;
                          GT ;
                          IF { DIG 2 ;
                               SWAP ;
                               DIG 3 ;
                               CAR ;
                               CAR ;
                               PUSH bool False ;
                               SWAP ;
                               UPDATE ;
                               SOME ;
                               DIG 2 ;
                               UPDATE }
                             { DROP 2 ; SWAP ; DROP } ;
                          SENDER ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          PAIR ;
                          PAIR ;
                          DIG 7 ;
                          SWAP ;
                          EXEC ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CDR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          NIL (or (pair (pair address address) nat) (pair (pair address address) nat)) ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          SELF ;
                          ADDRESS ;
                          PAIR ;
                          PAIR ;
                          RIGHT (pair (pair (address %operator) (address %owner)) (nat %token_id)) ;
                          CONS ;
                          PAIR ;
                          PAIR ;
                          DIG 7 ;
                          SWAP ;
                          EXEC ;
                          DIG 3 ;
                          CONTRACT unit ;
                          IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
                          DIG 4 ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          DIG 5 ;
                          DUP ;
                          DUP ;
                          DUG 7 ;
                          CAR ;
                          CDR ;
                          DIG 7 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 7 ;
                          NONE mutez ;
                          SWAP ;
                          UPDATE ;
                          DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          DIG 4 ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          DIG 3 ;
                          DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                          PAIR ;
                          PAIR ;
                          DIG 2 ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          NIL operation ;
                          DIG 2 ;
                          CONS ;
                          PAIR } }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     NOT ;
                     IF { DROP 3 ;
                          PUSH string "Only the owner of a land can change its description" ;
                          FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE
                            { DROP 3 ; PUSH string "Failure." ; FAILWITH }
                            { DIG 2 ;
                              DUP ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 2 ;
                              DIG 4 ;
                              CAR ;
                              CDR ;
                              SOME ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SOME ;
                              DIG 3 ;
                              UPDATE ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } } } }
               { DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     NOT ;
                     IF { DROP 2 ;
                          PUSH string "Only the owner of a land can change its name" ;
                          FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          GET ;
                          IF_NONE
                            { DROP 2 ; PUSH string "Failure." ; FAILWITH }
                            { DIG 2 ;
                              DUP ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 2 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SOME ;
                              DIG 3 ;
                              CDR ;
                              UPDATE ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } } }
                   { DIG 4 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         IF_LEFT
                           { DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             MAP {} ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             MAP { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE
                                     { DROP ; DIG 3 ; DUP ; DUG 4 ; FAILWITH }
                                     { SWAP ;
                                       DUP ;
                                       CAR ;
                                       DIG 2 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { PUSH nat 1 } { PUSH nat 0 } ;
                                       PAIR } ;
                                   DUP ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CAR ;
                                   PAIR ;
                                   SWAP ;
                                   CAR ;
                                   SWAP ;
                                   PAIR } ;
                             DIG 2 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             SWAP ;
                             CAR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { DIG 2 ;
                             DROP ;
                             PUSH mutez 0 ;
                             SELF ;
                             ADDRESS ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR } }
                       { DIG 6 ;
                         DROP ;
                         IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             MAP { DUP ;
                                   CDR ;
                                   MAP { DUP ;
                                         CDR ;
                                         CAR ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CAR ;
                                         DIG 2 ;
                                         CDR ;
                                         CDR ;
                                         PAIR ;
                                         PAIR } ;
                                   SWAP ;
                                   CAR ;
                                   PAIR } ;
                             SENDER ;
                             SOME ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CAR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             CDR ;
                             PAIR ;
                             DIG 5 ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DIG 2 ;
                             SWAP ;
                             EXEC ;
                             DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR }
                           { DIG 3 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             MAP { IF_LEFT
                                     { LEFT (pair (address %owner) (pair (address %operator) (nat %token_id))) }
                                     { RIGHT (pair (address %owner) (pair (address %operator) (nat %token_id))) } ;
                                   IF_LEFT
                                     { DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       SWAP ;
                                       EXEC ;
                                       LEFT (pair (pair (address %operator) (address %owner)) (nat %token_id)) }
                                     { DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       SWAP ;
                                       EXEC ;
                                       RIGHT (pair (pair (address %operator) (address %owner)) (nat %token_id)) } } ;
                             DIG 3 ;
                             DROP ;
                             SENDER ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             DIG 2 ;
                             PAIR ;
                             PAIR ;
                             DIG 2 ;
                             SWAP ;
                             EXEC ;
                             DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             NIL operation ;
                             PAIR } } } } }
           { DIG 3 ;
             DROP ;
             DIG 5 ;
             DROP ;
             DIG 6 ;
             DROP ;
             IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     MAP { SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           PAIR ;
                           DUP ;
                           CAR ;
                           NONE (pair nat nat) ;
                           DIG 2 ;
                           CDR ;
                           ITER { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  IF_NONE
                                    { SWAP ;
                                      DROP ;
                                      DUP ;
                                      CDR ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      COMPARE ;
                                      LT ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      COMPARE ;
                                      GE ;
                                      AND ;
                                      IF { SOME } { DROP ; NONE (pair nat nat) } }
                                    { SWAP ; DROP 2 } } ;
                           SWAP ;
                           DROP ;
                           IF_NONE { DIG 4 ; DUP ; DUG 5 ; FAILWITH } {} ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           CDR ;
                           SWAP ;
                           GET ;
                           IF_NONE { DROP ; PUSH string "NO_DATA" ; FAILWITH } { CAR ; PAIR } } ;
                     SWAP ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     MAP { DUP ;
                           CAR ;
                           CAR ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           PAIR ;
                           SWAP ;
                           CDR ;
                           PAIR } ;
                     SWAP ;
                     CAR ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     NIL operation ;
                     PAIR }
                   { DIG 4 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { DUP ;
                         DUG 2 ;
                         PUSH mutez 200 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              PAIR ;
                              PAIR ;
                              DIG 4 ;
                              SWAP ;
                              EXEC ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CAR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PUSH mutez 200 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              PUSH nat 1 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              SUB ;
                              ABS ;
                              PUSH nat 0 ;
                              DIG 2 ;
                              COMPARE ;
                              EQ ;
                              IF { DROP 2 ; PUSH string "token 0 does not exist" ; FAILWITH }
                                 { PUSH nat 0 ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   CDR ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                        CAR ;
                                        DIG 2 ;
                                        CDR ;
                                        CDR ;
                                        DIG 2 ;
                                        EDIV ;
                                        IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                        CDR ;
                                        PAIR }
                                      { DROP 2 ; PUSH string "wrong Dimension" ; FAILWITH } } ;
                              PUSH bool False ;
                              PAIR ;
                              PAIR ;
                              PUSH string "" ;
                              PUSH bool True ;
                              PAIR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              NONE string ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              SWAP ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              DIG 5 ;
                              CAR ;
                              CAR ;
                              IF_NONE
                                { DIG 3 ;
                                  DROP ;
                                  DIG 4 ;
                                  DROP ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  DIG 2 ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 3 ;
                                  CAR ;
                                  CDR ;
                                  DIG 2 ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 2 ;
                                  DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  NIL operation ;
                                  PAIR }
                                { DIG 5 ;
                                  DUP ;
                                  DUG 6 ;
                                  CDR ;
                                  CDR ;
                                  DIG 5 ;
                                  DUP ;
                                  DUG 6 ;
                                  CDR ;
                                  DIG 6 ;
                                  CAR ;
                                  CDR ;
                                  DIG 3 ;
                                  PAIR ;
                                  PAIR ;
                                  LEFT (pair (pair (address %operator) (address %owner)) (nat %token_id)) ;
                                  PAIR ;
                                  DIG 5 ;
                                  SWAP ;
                                  EXEC ;
                                  DIG 4 ;
                                  DUP ;
                                  DUG 5 ;
                                  DIG 3 ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  DIG 3 ;
                                  CAR ;
                                  CDR ;
                                  DIG 2 ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 2 ;
                                  DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  NIL operation ;
                                  PAIR } }
                            { DROP 5 ; PUSH string "Default mint price is 200mutez" ; FAILWITH } }
                       { SWAP ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DROP 2 ;
                         PUSH string "This non-fungible token already exists" ;
                         FAILWITH } } }
               { DIG 3 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE
                       { PUSH mutez 0 }
                       { DROP ; PUSH string "This land is already on sale" ; FAILWITH } ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     NOT ;
                     IF { DROP 3 ; PUSH string "Only the owner of a land can sell it" ; FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          SENDER ;
                          NIL (or (pair (pair address address) nat) (pair (pair address address) nat)) ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          SENDER ;
                          SELF ;
                          ADDRESS ;
                          PAIR ;
                          PAIR ;
                          RIGHT (pair (pair (address %operator) (address %owner)) (nat %token_id)) ;
                          CONS ;
                          PAIR ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DIG 2 ;
                          DUP ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          DIP { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                CAR } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          NIL operation ;
                          PAIR } }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "This land is not on sale" ; FAILWITH } {} ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     NOT ;
                     IF { DROP 3 ;
                          PUSH string "Only the owner of a land can withdraw it from sale" ;
                          FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          SENDER ;
                          NIL (or (pair (pair address address) nat) (pair (pair address address) nat)) ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          SENDER ;
                          SELF ;
                          ADDRESS ;
                          PAIR ;
                          PAIR ;
                          RIGHT (pair (pair (address %operator) (address %owner)) (nat %token_id)) ;
                          CONS ;
                          PAIR ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DIG 2 ;
                          DUP ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 3 ;
                          NONE mutez ;
                          SWAP ;
                          UPDATE ;
                          DIP { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                CAR } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          NIL operation ;
                          PAIR } } } } } }

